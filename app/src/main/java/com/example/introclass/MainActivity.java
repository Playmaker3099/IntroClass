package com.example.introclass;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import androidx.activity.EdgeToEdge;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;public class  MainActivity extends AppCompatActivity {    /**     * Widget initialisation.     This is where we initialise our Widgets before we use them     NOTE: There is a different way to do to this!!!     * **/    Button btnInsert;    EditText edtRoboname;    private DBHelper dbHelper;    Toolbar roboToolbar;    TextView tvUsername;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        EdgeToEdge.enable(this);        setContentView(R.layout.activity_main);      /*  btnRed = findViewById(R.id.btnRed);        btnGreen = findViewById(R.id.btnGreen);        btnYellow = findViewById(R.id.btnYellow); */        //Locating widgets via id.        tvUsername =findViewById(R.id.tvUsername);        /**Shared preferences, help us store small data (key-value pair)         * We get a new shared preferences object, using a key. Which will be pared to a value         * we set ourselves. To demonstrate this, look at the code below, which works with the one         * in LoginActivity         *         * **/        SharedPreferences preferences = getSharedPreferences("RoboPrefs", MODE_PRIVATE);        String username = preferences.getString("username", "");        tvUsername.setText("Hello "+ username);        //SharedPreferences -> now moved to LoginActivity        //Toolbar || Topic 2,3        roboToolbar = findViewById(R.id.toolbar);        setSupportActionBar(roboToolbar);        getSupportActionBar().setDisplayShowTitleEnabled(false);        //Db Insert Operation        edtRoboname = findViewById(R.id.edtRoboname);        btnInsert = findViewById(R.id.btnInsert);        dbHelper = new DBHelper(this);        btnInsert.setOnClickListener(v -> {            String name = edtRoboname.getText().toString();            if(dbHelper.insertRecord(name)){                Toast.makeText(this, "Successfully inserted", Toast.LENGTH_LONG).show();            }            else{                Toast.makeText(this, "Failed to insert", Toast.LENGTH_LONG).show();            }        });    }    /**This is part of the activity lifecycles discussed in class     * View the image in RES>DRAWABLE> activity_lifecycle**/    //SharedPreferences  /*   @Override    protected void onResume() {        super.onResume();        SharedPreferences preferences = getSharedPreferences("RoboPrefs", MODE_PRIVATE);        String username = preferences.getString("username", "");        edtName.setText(username);    }    @Override   protected void onPause() {        super.onPause();        SharedPreferences storePreferences = getSharedPreferences("RoboPrefs",MODE_PRIVATE);        SharedPreferences.Editor sharedPrefEditor = storePreferences.edit();        sharedPrefEditor.putString("username",edtName.getText().toString());        sharedPrefEditor.apply();    }*/    /** Menu creation.     * the onCreateOptionsMenu method allows us to create a pop-up menu (3 vertical dots)     * you inflate the menu with a layout xml file (in this case, it's called pop-menu)     *     * the onOptionsItemSelected method, specifies what must happens when a menu item is clicked     * for the time-being, this does nothing (we will revisit this part of the code later on)     *     * **/    @Override    public boolean onCreateOptionsMenu(Menu menu) {       getMenuInflater().inflate(R.menu.pop_up_menu,menu);       return  true;    }    @Override    public boolean onOptionsItemSelected(@NonNull MenuItem item) {        int itemId = item.getItemId();        if (itemId == R.id.popUp_Content) {            //display content        } else if (itemId == R.id.popUp_Themes){            //load themes        }else if (itemId == R.id.popUp_Logout){            //logout        } else if(itemId == R.id.popUp_settings){            //load settings        }        return super.onOptionsItemSelected(item);    }}/**ANDROID COMPONENTS : YOU MUST KNOW THESE **//* Activities - individual screens (represents the UI elements)* Services - background components that perform operations without a UI* Content providers - they share and manage data between different apps* Broadcast receivers - components that allow your application to send and receive system-wide* broadcast messages or custom events* *//*SharedPreferences* Help us store a small collection of key-value pairs that we want to save.* We can store and retrieve SharedPreferences objects.* */